<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4"
 xmlns="http://java.sun.com/xml/ns/j2ee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
 <display-name>Qaf</display-name>
 <!-- Specifies to the ICEfaces framework whether to support multiple views of a
		single application from the same browser.  When running in a Portlet
		environment, this parameter must be set to true. -->
 <context-param>
  <param-name>com.icesoft.faces.concurrentDOMViews</param-name>
  <param-value>true</param-value>
 </context-param>
 <!-- Specifies to the ICEfaces framework that synchronous update mode is to be
		used.  By default, ICEfaces uses asynchronous update mode to support
		server-initiated updates (AJAX push).  Setting to true will enable
		synchronous update mode and disable AJAX push features.
		Setting true resolves problem with Network Connection Interrupted Modal -->
 <context-param>
  <param-name>com.icesoft.faces.synchronousUpdate</param-name>
  <param-value>true</param-value>
 </context-param>
 <context-param>
  <param-name>facelets.DEVELOPMENT</param-name>
  <param-value>true</param-value>
 </context-param>
 <context-param>
  <param-name>facelets.LIBRARIES</param-name>
  <param-value>/WEB-INF/facelets/tags/faceletsTutorial.taglib.xml</param-value>
 </context-param>
 <context-param>
  <param-name>javax.faces.CONFIG_FILES</param-name>
  <param-value>/WEB-INF/faces-config.xml,
			/WEB-INF/faces-config-security.xml,
			/WEB-INF/faces-config-waf-beans.xml,
			/WEB-INF/faces-config-application-beans.xml,
			/WEB-INF/faces-config-navigation.xml,
			/WEB-INF/faces-config-validation.xml</param-value>
 </context-param>
 <context-param>
  <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
  <param-value>.jspx</param-value>
 </context-param>
 <context-param>
  <param-name>javax.faces.application.CONFIG_FILES</param-name>
  <param-value>/WEB-INF/faces-config.xml</param-value>
 </context-param>
 <filter>
  <filter-name>encodingFilter</filter-name>
  <filter-class>org.qaf.security.openid.EncodingFilter</filter-class>
 </filter>
 <filter-mapping>
  <filter-name>encodingFilter</filter-name>
  <url-pattern>/*</url-pattern>
 </filter-mapping>
 <!-- Specifies to the ICEfaces framework whether to compress the server-side DOM
		representation after each response. This saves a considerable amount of
		of memory per client. However, since this is decompressed/compressed for
		every update, it may not bring significant memory savings to applications
		that make frequent use of AJAX push.
		<context-param>
		<param-name>com.icesoft.faces.compressDOM</param-name>
		<param-value>true</param-value>
		</context-param> 
 Specifies the amount of time in milliseconds that the bridge will wait for
		a response from the server for a user-initiated request before declaring
		the connection lost.  Un-comment and change the default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.connectionTimeout</param-name>
		<param-value>60000</param-value>
		</context-param>
	
 Specifies the amount of time in milliseconds that an idle asynchronous
		blocking connection should be held open before being released. Normally,
		the blocking connection is closed and re-opened with every communication to
		the browser, such as user interaction or a heartbeat ping. The purpose of
		this setting is to remove the possibility of threads being held blocked for
		a long duration on a dead or completely inactive client connection. This
		value should be longer than the heartbeat interval to avoid unnecessary
		network traffic.  Un-comment and change the default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.blockingConnectionTimeout</param-name>
		<param-value>90000</param-value>
		</context-param>
	
 Specifies the amount of time in milliseconds between heartbeat messages.
		Un-comment and change the default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.heartbeatInterval</param-name>
		<param-value>50000</param-value>
		</context-param>
	
 Specifies how many consecutive heartbeat connection attempts may fail
		before the connection is considered lost.  Un-comment and change the
		default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.heartbeatRetries</param-name>
		<param-value>3</param-value>
		</context-param>
	
 Specifies the number of milliseconds that a heartbeat request waits for a
		successful response before it is considered timed out.  Un-comment and
		change the default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.heartbeatTimeout</param-name>
		<param-value>30000</param-value>
		</context-param>
	
 Specifies a page URI to redirect the client to when an asynchronous
		connection is lost. The parameter value must be surrounded by single
		quotes.  Un-comment and change the default value, if necessary.
		<context-param>
		<param-name>com.icesoft.faces.connectionLostRedirectURI</param-name>
		<param-value></param-value>
		</context-param>
	
 ConfigureListener is not generally required. Due to an apparent bug in
		Tomcat users have reported seeing the following error "SEVERE: ICEfaces
		could not initialize JavaServer Faces. Please check that the JSF .jar files
		are installed correctly.". Specifying the ConfigureListener resolves the
		issue.
		<listener>
		<listener-class>com.sun.faces.config.ConfigureListener</listener-class>
		</listener>
	-->
 <listener>
  <listener-class>com.icesoft.faces.util.event.servlet.ContextEventRepeater</listener-class>
 </listener>
 <!-- Faces Servlet -->
 <servlet>
  <servlet-name>Faces Servlet</servlet-name>
  <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <servlet>
  <servlet-name>Persistent Faces Servlet</servlet-name>
  <servlet-class>com.icesoft.faces.webapp.xmlhttp.PersistentFacesServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <servlet>
  <servlet-name>Blocking Servlet</servlet-name>
  <servlet-class>com.icesoft.faces.webapp.xmlhttp.BlockingServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <servlet>
  <servlet-name>Login page mapping</servlet-name>
  <jsp-file>/security/login.jsp</jsp-file>
 </servlet>
 <servlet>
  <servlet-name>language</servlet-name>
  <servlet-class>org.qaf.waf.language.LanguageServlet</servlet-class>
  <load-on-startup>0</load-on-startup>
 </servlet>
 <servlet>
  <servlet-name>openid</servlet-name>
  <servlet-class>org.qaf.security.openid.OpenIdServlet</servlet-class>
  <load-on-startup>0</load-on-startup>
 </servlet>
 <!-- Faces Servlet Mapping -->
 <servlet-mapping>
  <servlet-name>Faces Servlet</servlet-name>
  <url-pattern>*.faces</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>Faces Servlet</servlet-name>
  <url-pattern>/home/*</url-pattern>
 </servlet-mapping>
 <!-- Persistent Faces Servlet Mapping -->
 <servlet-mapping>
  <servlet-name>Persistent Faces Servlet</servlet-name>
  <url-pattern>*.iface</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>Persistent Faces Servlet</servlet-name>
  <url-pattern>/xmlhttp/*</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>Blocking Servlet</servlet-name>
  <url-pattern>/block/*</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>Login page mapping</servlet-name>
  <url-pattern>/login</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>language</servlet-name>
  <url-pattern>/language</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
  <servlet-name>openid</servlet-name>
  <url-pattern>/openid</url-pattern>
 </servlet-mapping>
 <session-config>
  <session-timeout>30</session-timeout>
 </session-config>
 <welcome-file-list>
  <welcome-file>index.html</welcome-file>
  <welcome-file>index.htm</welcome-file>
  <welcome-file>index.jsp</welcome-file>
  <welcome-file>default.html</welcome-file>
  <welcome-file>default.htm</welcome-file>
  <welcome-file>default.jsp</welcome-file>
 </welcome-file-list>
 <!-- Define a Security Constraint on this Application -->
 <security-constraint>
  <web-resource-collection>
   <web-resource-name>Entire Application</web-resource-name>
   <url-pattern>/*</url-pattern>
  </web-resource-collection>
  <auth-constraint>
   <role-name>Administrator sistema</role-name>
   <role-name>Administrator podataka</role-name>
  </auth-constraint>
 </security-constraint>
 <security-constraint>
  <web-resource-collection>
   <web-resource-name>Login SSL config</web-resource-name>
   <url-pattern>/login</url-pattern>
  </web-resource-collection>
  <user-data-constraint>
   <transport-guarantee>CONFIDENTIAL</transport-guarantee>
  </user-data-constraint>
 </security-constraint>
 <security-constraint>
  <web-resource-collection>
   <web-resource-name>Unsecured resources</web-resource-name>
   <url-pattern>/openid</url-pattern>
   <url-pattern>/loginserbian</url-pattern>
   <url-pattern>/loginenglish</url-pattern>
   <url-pattern>/language</url-pattern>
   <url-pattern>/stylesheets/*</url-pattern>
   <url-pattern>/images/*</url-pattern>
   <url-pattern>/favicon.ico</url-pattern>
  </web-resource-collection>
 </security-constraint>
 <!-- Define the Login Configuration for this Application -->
 <login-config>
  <auth-method>FORM</auth-method>
  <realm-name>myrealm</realm-name>
  <form-login-config>
   <form-login-page>/security/language.jsp</form-login-page>
   <form-error-page>/security/errors.jsp</form-error-page>
  </form-login-config>
 </login-config>
 <security-role>
  <description>The role required to access restricted content</description>
  <role-name>AdministratorSistema</role-name>
 </security-role>
 <security-role>
  <description>The role required to access restricted content</description>
  <role-name>AdministratorPodataka</role-name>
 </security-role>
</web-app>
